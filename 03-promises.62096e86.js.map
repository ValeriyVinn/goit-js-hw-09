{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAWmBC,SAASC,cAAc,SAE/BC,iBAAiB,UAE5B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAASF,EAAMG,cAAcD,OAAOE,cACpCC,EAAOL,EAAMG,cAAcE,KAAKD,cACtC,IAAIE,EAAQN,EAAMG,cAAcI,MAAMH,cAEtC,IAAK,IAAII,EAAkB,EAAGA,GAAmBN,EAAQM,IACvDC,EAAcD,EAAiBF,GAC5BI,MAAK,EAACC,SAAEA,EAAQJ,MAAEA,MACjBK,EAAAjB,GAASkB,OAAOC,QAAQ,qBAAqBH,QAAeJ,MAAU,IAEvEQ,OAAM,EAACJ,SAAEA,EAAQJ,MAAEA,MAClBK,EAAAjB,GAASkB,OAAOG,QAAQ,oBAAoBL,QAAeJ,MAAU,IAEzED,GAASD,EAGX,SAASI,EAAcE,EAAUJ,GAC/B,MAAMU,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEV,E,MAAUJ,IAEpBe,EAAO,C,SAAEX,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAIbP,EAAMG,cAAcqB,O","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\nimport Notiflix from 'notiflix';\n\nconst formSubmit = document.querySelector('.form');\n\nformSubmit.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const amount = event.currentTarget.amount.valueAsNumber;\n  const step = event.currentTarget.step.valueAsNumber;\n  let delay = event.currentTarget.delay.valueAsNumber;\n\n  for (let currentPosition = 1; currentPosition <= amount; currentPosition++) {\n    createPromise(currentPosition, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  event.currentTarget.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","amount","currentTarget","valueAsNumber","step","delay1","delay","currentPosition","createPromise1","then","position","$parcel$interopDefault","Notify","success","catch","failure","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","reset"],"version":3,"file":"03-promises.62096e86.js.map"}